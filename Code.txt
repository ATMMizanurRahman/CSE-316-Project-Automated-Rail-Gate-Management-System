#include <avr/io.h>
#define F_CPU 1000000
#include <util/delay.h>

void USART_init(void)
{
	UCSRA = 0b00000010;  // double speed
	UCSRB = 0b00011000;  // Enable Tx and Rx, polling
	UCSRC = 0b10000110;  // Async mode, no parity, 1 stop bit, 				8 data bits
	//in double-speed mode, UBRR = clock/(8xbaud rate) - 1
	UBRRH = 0;
	UBRRL = 12; // Baud rate 9600bps, assuming 1MHz clock
}

void UART_send(unsigned char data){ 	
	// wait until UDRE flag is set to logic 1 	
	while ((UCSRA & (1<<UDRE)) == 0x00); 	
	UDR = data; // Write character to UDR for transmission
}

unsigned char UART_receive(void){ 	
	// Wait until RXC flag is set to logic 1 	
	while ((UCSRA & (1<<RXC)) == 0x00); 	
	return UDR; // Read the received character from UDR
}

void send_string(char * str){
	int i = 0;
	while(str[i] != '\0'){
		UART_send(str[i]);
		i++;
	}
}

unsigned int period, duty_cycle, high_time;

void init_motor(){
	DDRB = 0xFF;
	DDRD = 0b00100000;

	TCCR1A = 0b10000010;
	TCCR1B = 0b00011001;

	period = 20000;
	duty_cycle = 1;
	ICR1 = period - 1;
	high_time = (period/100)*duty_cycle;
}

void closeGate(){
	duty_cycle = 7;
	high_time = (period/100)*duty_cycle;
	OCR1A = high_time-1;
	_delay_ms(1000);
}

void openGate(){
	duty_cycle = 1;
	high_time = (period/100)*duty_cycle;
	OCR1A = high_time-1;
	_delay_ms(1000);

}

int main(void)
{
	DDRA = 0b11110111;
	USART_init(); // initialise USART
	init_motor();

	DDRA = 0b11111110;
	while (1) {
		if(PINA && 0b00000001){
			openGate();
		}else{
			closeGate();
		}
	}
}